apiVersion: {{ template "deployment.apiVersion" . }}
kind: Deployment
metadata:
  name: {{ include "helper.fullname" . }}
  labels:
    {{- include "sentinelone.helper.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "sentinelone.helper.selector.labels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "sentinelone.helper.labels" . | nindent 8 }}
    spec:
{{- if .Values.secrets.imagePullSecret }}
      imagePullSecrets:
        - name: {{ .Values.secrets.imagePullSecret }}
{{- end }}
      serviceAccountName: {{ include "sentinelone.serviceAccountName" . }}
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
      containers:
        - name: helper
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ include "helper.full_url" . }}"
          imagePullPolicy: {{ default "IfNotPresent" .Values.configuration.imagePullPolicy }}
          env:
{{- if .Values.configuration.cluster.name }}
          - name: CLUSTER_NAME
            value: {{ .Values.configuration.cluster.name }}
{{- end }}
          - name: SERVER_PORT
            value: "{{ include "service.target_port" . }}"
          - name: SERVER_CRT
            valueFrom:
              secretKeyRef:
                name: {{ include "helper.secret.name" . }}
                key: tls.crt
          - name: SERVER_KEY
            valueFrom:
              secretKeyRef:
                name: {{ include "helper.secret.name" . }}
                key: tls.key
          - name: LOG_LEVEL
            value: {{ .Values.configuration.env.helper.log_level }}
          - name: AGENT_INJECTION_ENABLED
            value: "{{ .Values.configuration.env.injection.enabled }}"
{{- if .Values.configuration.env.injection.enabled }}
          - name: AGENT_INJECTION_CONFIG_FILE
            value: "/s1-helper/agent-injection/config.yaml"
{{- if and (include "site_key.secret.create" .)  (include "site_key.secret.name" .) }}
          - name: SITE_TOKEN
            valueFrom:
              secretKeyRef:
                name: {{ include "site_key.secret.name" . }}
                key: site-key
{{- end }}
{{- end }}
          ports:
            - name: https
              containerPort: {{ include "service.target_port" . }}
              protocol: TCP
{{- if .Values.helper.probe }}
          livenessProbe:
            httpGet:
              path: /health
              port: {{ include "service.target_port" . }}
              scheme: HTTPS
            initialDelaySeconds: 30
            periodSeconds: 5
          readinessProbe:
            httpGet:
              path: /health
              port: {{ include "service.target_port" . }}
              scheme: HTTPS
            initialDelaySeconds: 30
            periodSeconds: 5
{{- end }}
          resources:
            {{- toYaml .Values.helper.resources | nindent 12 }}
{{- if .Values.configuration.env.injection.enabled }}
          volumeMounts:
          - name: agent-injection-config
            mountPath: /s1-helper/agent-injection
      volumes:
        - name: agent-injection-config
          configMap:
            name: {{ include "agentInjection.name" . }}
{{- end }}
    {{- with .Values.helper.nodeSelector }}
      nodeSelector: {{- toYaml . | nindent 8 }}
    {{- end }}
{{- if default .Values.agent.priorityClassName .Values.helper.priorityClassName }}
      priorityClassName: {{ default .Values.agent.priorityClassName .Values.helper.priorityClassName }}
{{- end }}
    {{- with .Values.helper.affinity }}
      affinity: {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.helper.tolerations }}
      tolerations: {{- toYaml . | nindent 8 }}
    {{- end }}
