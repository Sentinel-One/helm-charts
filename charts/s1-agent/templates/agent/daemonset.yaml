{{ if and (or (not .Values.configuration.env.injection.enabled) (eq (include "serverlessOnlyMode" .) "false")) (not .Values.configuration.inventory_only) }}
apiVersion: {{ template "daemonset.apiVersion" . }}
kind: DaemonSet
metadata:
  name: {{ include "agent.fullname" . }}
  labels: {{- include "sentinelone.agent.labels" . | nindent 4 }}
  {{ if eq (include "argocdPostDeleteHook.enabled" .) "true" }}
  annotations:
    argocd.argoproj.io/sync-options: Delete=false
  {{- end }}
spec:
  updateStrategy:
    type: {{ default "RollingUpdate" .Values.agent.updateStrategy }}
    rollingUpdate:
      maxUnavailable: {{ default 1 .Values.agent.rollingUpdateMaxUnavailable }}
  selector:
    matchLabels:
{{- include "sentinelone.agent.selector.labels" . | nindent 6 }}
  template:
    metadata:
      labels:
{{- include "sentinelone.agent.labels" . | nindent 8 }}
      annotations:
        timestamp: {{ now | quote }}
      {{- if .Values.agent.podAnnotations }}
{{ toYaml .Values.agent.podAnnotations | indent 8 }}
      {{- end }}
      {{- if and
          (semverCompare "<1.30.0" (printf "%d.%d.0" (semver .Capabilities.KubeVersion.Version).Major (semver .Capabilities.KubeVersion.Version).Minor))
          (not (eq .Values.configuration.platform.type "openshift"))
      }}
      {{ default "container.apparmor.security.beta.kubernetes.io/s1-agent" .Values.agent.apparmorAnnotation }}: {{ default "unconfined" (lower .Values.agent.apparmorPolicy) }}
      {{- end }}
    spec:
{{- if .Values.secrets.imagePullSecret }}
      imagePullSecrets:
        - name: {{ .Values.secrets.imagePullSecret }}
{{- end }}
      hostPID: true
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      securityContext:
        runAsUser: {{ .Values.configuration.env.agent.pod_uid }}
        runAsGroup: {{ .Values.configuration.env.agent.pod_gid }}
        {{- if and
          (semverCompare ">=1.30.0" (printf "%d.%d.0" (semver .Capabilities.KubeVersion.Version).Major (semver .Capabilities.KubeVersion.Version).Minor))
          (not (eq .Values.configuration.platform.type "openshift"))
        }}
        appArmorProfile:
          type: {{ default "Unconfined" .Values.agent.apparmorPolicy }}
          {{- if eq .Values.agent.apparmorPolicy "Localhost" }}
          {{- if .Values.agent.apparmorLocalhostProfileName }}
          localhostProfile: {{ .Values.agent.apparmorLocalhostProfileName }}
          {{- else }}
          {{- fail "AppArmor Configuration Error: When agent.apparmorPolicy is 'Localhost', agent.localhostProfileName must be specified." }}
          {{- end }}
          {{- end }}
        {{- end }}
      restartPolicy: Always
      serviceAccountName: {{ include "sentinelone.serviceAccountName" . }}
      containers:
      - name: "{{ include "agent.container_name" . }}"
        image: "{{ include "agent.full_url" . }}"
        imagePullPolicy: {{ default "IfNotPresent" .Values.configuration.imagePullPolicy }}
        resources:
{{- include "agentResources" . | nindent 10 }}
        env:
{{- include "agent.common_env" . | nindent 8 }}
{{- if include "site_key.secret.name" . }}
        - name: SITE_TOKEN
          valueFrom:
            secretKeyRef:
              name: {{ include "site_key.secret.name" . }}
              key: site-key
{{- end }}
        - name: S1_AGENT_TYPE
          value: "k8s"
        - name: S1_HELPER_HOST
          value: {{ include "service.name" . }}
        - name: S1_AGENT_HOST_MOUNT_PATH
          value: "{{ default "/host" .Values.configuration.env.agent.host_mount_path }}"
        - name: S1_PERSISTENT_DIR
          value: "{{ include "persistentDir" . }}"
        - name: S1_POD_UID
          value: "{{ .Values.configuration.env.agent.pod_uid }}"
        - name: S1_POD_GID
          value: "{{ .Values.configuration.env.agent.pod_gid }}"
        - name: S1_AGENT_CONFIG_PATH
          value: "/opt/configmaps/config"
        - name: S1_EBPF_ENABLED
          value: "{{ default "true" .Values.configuration.env.agent.ebpf_enabled }}"
{{- if .Values.configuration.platform.gke.autopilot }}
        - name: S1_GKE_AUTOPILOT
          value: "true"
{{- end }}
{{- if .Values.configuration.localConf }}
        - name: S1_AGENT_LOCAL_CONF
          value: "/opt/configmaps/config/local.conf"
{{- end }}
{{- if .Values.configuration.overrideConf }}
        - name: S1_AGENT_OVERRIDE_CONF
          value: "/opt/configmaps/config/override.conf"
{{- end }}
        volumeMounts:
{{- if .Values.configuration.custom_ca }}
{{- $agentCerts := fromYaml (include "agent.certificates" .) -}}
{{- range $cert := $agentCerts.certificates }}
          - name: ca-certs
            mountPath: "/usr/local/share/ca-certificates/{{ $cert.name }}"
            subPath: "{{ $cert.name }}"
{{- end }}
{{- end }}
          - name: host
            mountPath: {{ default "/host" .Values.configuration.env.agent.host_mount_path }}
            mountPropagation: HostToContainer
{{- if .Values.configuration.platform.gke.autopilot }}
            readOnly: true
          - name: persistence
            mountPath: {{ include "persistentDir" . }}
{{- else }}
          - name: containerd
            mountPath: /run/containerd/containerd.sock
            readOnly: true
          - name: crio
            mountPath: /run/crio/crio.sock
            readOnly: true
          - name: dockerd
            mountPath: /var/run/cri-dockerd.sock
            readOnly: true
{{- end }}
          - name: config
            mountPath: /opt/configmaps/config
            readOnly: true
        securityContext:
{{- if include "bottlerocketNode" . }}
          seLinuxOptions:
            user: system_u
            role: system_r
            type: control_t
            level: "s0"
{{- end }}
          capabilities:
            drop:
              - all
            add:
{{- if eq .Values.configuration.platform.type "talos" }}
{{- range .Values.agent.capabilities }}
{{- if ne . "SYS_MODULE" }}
{{ printf "- %s" . | indent 14 }}
{{- end }}
{{- end }}
{{- else }}
{{- toYaml .Values.agent.capabilities | nindent 14 }}
{{- end }}
      volumes:
{{- if .Values.configuration.custom_ca }}
        - name: ca-certs
          secret:
            secretName: "{{ include "agent.fullname" . }}-custom-ca"
{{- end }}
        - name: host
          hostPath:
            path: /
{{- if .Values.configuration.platform.gke.autopilot }}
        - name: persistence
          hostPath:
            path: {{ include "persistentDir" . }}
{{- else }}
        - name: containerd
          hostPath:
            path: /run/containerd/containerd.sock
        - name: crio
          hostPath:
            path: /run/crio/crio.sock
        - name: dockerd
          hostPath:
            path: /var/run/cri-dockerd.sock
{{- end }}
        - name: config
          configMap:
            name: {{ include "agent.fullname" . }}-config
    {{- with .Values.agent.nodeSelector }}
      nodeSelector: {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- if default .Values.helper.priorityClassName .Values.agent.priorityClassName }}
      priorityClassName: {{ default .Values.helper.priorityClassName .Values.agent.priorityClassName }}
    {{- end }}
    {{- with .Values.agent.affinity }}
      affinity: {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.agent.tolerations }}
      tolerations: {{- toYaml . | nindent 8 }}
    {{- end }}
{{ end }}
