{{ if eq (include "argocdPostDeleteHook.enabled" .) "true" }}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "argocdPostDeleteHook.name" . }}
  labels:
{{ include "sentinelone.helper.labels" . | nindent 4 }}
  annotations:
    "argocd.argoproj.io/hook": PostDelete
    "argocd.argoproj.io/hook-delete-policy": HookSucceeded, BeforeHookCreation, HookFailed
spec:
  backoffLimit: 0
  activeDeadlineSeconds: {{ .Values.configuration.argocd.post_delete_hook_timeout }}
  template:
    metadata:
      labels:
        {{- include "sentinelone.helper.labels" . | nindent 8 }}
      name: {{ include "argocdPostDeleteHook.name" . }}
    spec:
{{- if .Values.secrets.imagePullSecret }}
      imagePullSecrets:
        - name: {{ .Values.secrets.imagePullSecret }}
{{- end }}
      restartPolicy: Never
      serviceAccountName: {{ include "sentinelone.serviceAccountName" . }}
      containers:
        - name: {{ include "argocdPostDeleteHook.name" . }}
          securityContext:
            {{- toYaml .Values.helper.securityContext | nindent 12 }}
          image: "{{ include "helper.full_url" . }}"
          command: [ "/bin/bash", "-c" ]
          args:
            - |
              {{ include "hooks.uninstallScript" . | nindent 14 }}
              failed=0
              /s1-helper/kubectl delete daemonset {{ include "agent.fullname" . }} --ignore-not-found || failed=1;
              /s1-helper/kubectl delete statefulset {{ include "helper.fullname" . }} --ignore-not-found || failed=1;

              {{- if or (not .Values.configuration.env.injection.enabled) (eq (include "serverlessOnlyMode" .) "false") }}
              /s1-helper/kubectl delete serviceaccount {{ include "sentinelone.serviceAccountName" . }} --ignore-not-found || failed=1;
              {{- end -}}

              if [[ $failed -ne 0 ]]; then
                echo "One or more resources failed to get deleted"
                exit 1
              fi

              echo "Done";
{{ end }}
